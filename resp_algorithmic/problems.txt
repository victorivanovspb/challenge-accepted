Алгоритмические задачи
SOURCE-URL: https://proglib.io/p/interview-questions/

    1.  В матрице размерами N * M, состоящей из чисел от 1 до N * M, найдите путь
        из верхнего левого угла в правый нижний угол, двигаясь только вправо и вниз,
        так, чтобы сумма чисел на этом пути минимальна. Учитывайте то, что каждое
        число в матрице встречается лишь единожды.
        get_a_way_in_the_matrix.py

    2.  Дано число N типа float, найдите его квадратный корень.

    3.  Имея монеты разного достоинства, найдите минимальное число монет, необходимых,
        чтобы составить сумму. Любая монета может встречаться любое количество раз.

    4.  Есть строка S и ряд символов. Найдите наименьшую подстроку в строке S, которая
        содержит в себе данный ряд символов.

    5.  У вас есть неотсортированный массив, в котором каждый элемент находится на дистанции
        в максимум K мест от своего правильного места в отсортированном массиве.
        Отсортируйте его.

    6.  У вас есть бинарное дерево. Проверьте, является ли оно бинарным деревом поиска.

    7.  Найдите число чёрных связанных элементов в чёрно-белой матрице. А что, если
        матрица трёхмерная?

    8.  Допустим, у вас есть N отсортированных массивов, найдите K-ый наименьший элемент.

    9.  У вас есть 4 строки, которые вы можете переставлять любым способом.
        Ваша задача — сделать максимально длинным наибольшую общий префикс после всех перестановок.

    10. Есть N точек на 2-мерной плоскости. У каждой точки есть цвет R, B, G.
        Ваша задача — найти треугольник наибольшей площади с данными точками, чтобы одна
        из сторон треугольника была параллельна к одной из осей и на каждой вершине точки
        были разного цвета.

    11. Найдите триплеты в данном массиве, сумма чисел в которых равна нулю.

    12. Строка a2b3c5 после разжатия становится строкой aabbbccccc. Сожмите данную вам строку S.

    13. Сделайте клон связного списка.

    14. Сделайте клон графа в форме списка смежности.

    15. Переверните связный список.

    16. У вас есть программа, написанная на Python. Найдите строку, в которой возникнет
        Indentation error.

    17. Допустим, у вас есть словарь и список строковых запросов. Для каждого запроса верните
        строку из словаря, которая анаграмна запросу.

    18. У нас есть список целых цисел. Найдите в нём медиану. Реализуйте функцию, которая
        добавляет новый элемент к этому списку, при этом считаю новую медиану.
